const { Resend } = require("resend")
require("dotenv").config()

// Initialize Resend with API key
const resend = new Resend(process.env.RESEND_API_KEY)

// Fonction pour envoyer un email de r√©cup√©ration de mot de passe
const sendPasswordResetEmail = async (email, resetToken, userName = "") => {
  try {
    console.log("üìß Tentative d'envoi d'email via Resend √†:", email)
    console.log("üîë Token de r√©initialisation:", resetToken)

    // V√©rifier que la cl√© API Resend est configur√©e
    if (!process.env.RESEND_API_KEY) {
      console.error("‚ùå RESEND_API_KEY manquant")
      throw new Error("RESEND_API_KEY n'est pas configur√© dans les variables d'environnement")
    }

    // V√©rifier le format de la cl√© API
    if (!process.env.RESEND_API_KEY.startsWith("re_")) {
      console.error("‚ùå Format de cl√© API invalide")
      throw new Error("Format de cl√© API Resend invalide")
    }

    console.log("‚úÖ Configuration API valid√©e")

    const emailData = {
      from: "MyClass <onboarding@resend.dev>", // Using default Resend domain
      to: [email],
      subject: "R√©cup√©ration de votre mot de passe - MyClass",
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>R√©cup√©ration de mot de passe - MyClass</title>
          <style>
            body {
              margin: 0;
              padding: 0;
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
              line-height: 1.6;
              color: #333;
              background-color: #f8f9fa;
            }
            .container {
              max-width: 600px;
              margin: 0 auto;
              padding: 20px;
            }
            .email-content {
              background-color: white;
              padding: 40px;
              border-radius: 12px;
              box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
              border: 1px solid #e9ecef;
            }
            .header {
              text-align: center;
              margin-bottom: 30px;
            }
            .logo {
              font-size: 28px;
              font-weight: bold;
              color: #007bff;
              margin-bottom: 10px;
            }
            .title {
              font-size: 24px;
              color: #495057;
              margin: 0;
            }
            .greeting {
              font-size: 16px;
              margin-bottom: 20px;
              color: #6c757d;
            }
            .code-container {
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              border-radius: 12px;
              padding: 30px;
              text-align: center;
              margin: 30px 0;
              box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
            }
            .code-label {
              color: white;
              font-size: 14px;
              margin-bottom: 10px;
              opacity: 0.9;
            }
            .verification-code {
              font-size: 36px;
              font-weight: bold;
              color: white;
              letter-spacing: 12px;
              font-family: 'Courier New', monospace;
              text-shadow: 0 2px 4px rgba(0,0,0,0.3);
            }
            .instructions {
              background-color: #f8f9fa;
              border-left: 4px solid #007bff;
              padding: 20px;
              margin: 25px 0;
              border-radius: 0 8px 8px 0;
            }
            .instructions h3 {
              margin-top: 0;
              color: #007bff;
              font-size: 18px;
            }
            .instructions ol {
              margin: 15px 0;
              padding-left: 20px;
            }
            .instructions li {
              margin-bottom: 8px;
              color: #495057;
            }
            .warning {
              background-color: #fff3cd;
              border: 1px solid #ffeaa7;
              color: #856404;
              padding: 20px;
              border-radius: 8px;
              margin: 25px 0;
            }
            .warning-title {
              font-weight: bold;
              margin-bottom: 10px;
              display: flex;
              align-items: center;
            }
            .warning ul {
              margin: 10px 0;
              padding-left: 20px;
            }
            .warning li {
              margin-bottom: 5px;
            }
            .footer {
              text-align: center;
              color: #6c757d;
              font-size: 14px;
              margin-top: 40px;
              padding-top: 20px;
              border-top: 1px solid #dee2e6;
            }
            .footer p {
              margin: 5px 0;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="email-content">
              <div class="header">
                <div class="logo">üéì MyClass</div>
                <h1 class="title">R√©cup√©ration de mot de passe</h1>
              </div>
              
              <div class="greeting">
                Bonjour ${userName || "Cher utilisateur"},
              </div>
              
              <p>Vous avez demand√© la r√©cup√©ration de votre mot de passe pour votre compte MyClass. Nous avons g√©n√©r√© un code de v√©rification s√©curis√© pour vous.</p>
              
              <div class="code-container">
                <div class="code-label">Votre code de v√©rification</div>
                <div class="verification-code">${resetToken}</div>
              </div>
              
              <div class="instructions">
                <h3>üìã Instructions</h3>
                <ol>
                  <li>Copiez le code de v√©rification ci-dessus</li>
                  <li>Retournez sur la page de r√©cup√©ration de mot de passe</li>
                  <li>Collez le code dans le champ de v√©rification</li>
                  <li>Cr√©ez votre nouveau mot de passe s√©curis√©</li>
                </ol>
              </div>
              
              <div class="warning">
                <div class="warning-title">‚ö†Ô∏è Important - S√©curit√©</div>
                <ul>
                  <li><strong>Ce code expire dans 1 heure</strong></li>
                  <li>Ne partagez jamais ce code avec personne</li>
                  <li>Si vous n'avez pas demand√© cette r√©cup√©ration, ignorez cet email</li>
                  <li>En cas de doute, contactez notre support</li>
                </ul>
              </div>
              
              <p>Si vous avez des questions ou besoin d'aide, n'h√©sitez pas √† nous contacter. Notre √©quipe est l√† pour vous aider.</p>
              
              <p style="margin-top: 30px;">
                Cordialement,<br>
                <strong>L'√©quipe MyClass</strong>
              </p>
              
              <div class="footer">
                <p>Cet email a √©t√© envoy√© automatiquement, merci de ne pas y r√©pondre directement.</p>
                <p>¬© 2024 MyClass Platform. Tous droits r√©serv√©s.</p>
                <p style="font-size: 12px; margin-top: 15px;">
                  Envoy√© avec ‚ù§Ô∏è par Resend
                </p>
              </div>
            </div>
          </div>
        </body>
        </html>
      `,
      text: `
        R√©cup√©ration de mot de passe - MyClass
        
        Bonjour ${userName || "Cher utilisateur"},
        
        Vous avez demand√© la r√©cup√©ration de votre mot de passe pour votre compte MyClass.
        
        Code de v√©rification : ${resetToken}
        
        Ce code expire dans 1 heure.
        
        Instructions :
        1. Copiez le code ci-dessus
        2. Retournez sur la page de r√©cup√©ration de mot de passe
        3. Collez le code dans le champ de v√©rification
        4. Cr√©ez votre nouveau mot de passe s√©curis√©
        
        IMPORTANT :
        - Ce code expire dans 1 heure
        - Ne partagez jamais ce code avec personne
        - Si vous n'avez pas demand√© cette r√©cup√©ration, ignorez cet email
        
        Si vous avez des questions, contactez notre support.
        
        Cordialement,
        L'√©quipe MyClass
        
        ¬© 2024 MyClass Platform. Tous droits r√©serv√©s.
      `,
    }

    console.log("üì§ Envoi de l'email via Resend...")
    console.log("üìß Destinataire:", email)
    console.log("üìß Exp√©diteur:", emailData.from)

    const result = await resend.emails.send(emailData)

    console.log("üì¨ R√©ponse Resend compl√®te:", JSON.stringify(result, null, 2))

    // V√©rifier si l'envoi a r√©ussi
    if (result.data && result.data.id) {
      console.log("‚úÖ Email envoy√© avec succ√®s via Resend!")
      console.log("üìß ID de l'email:", result.data.id)
      console.log(`üìß Code envoy√© √† ${email}: ${resetToken}`)

      return {
        success: true,
        messageId: result.data.id,
        service: "resend",
      }
    } else {
      console.error("‚ùå √âchec de l'envoi - Pas d'ID retourn√©")
      console.error("üì¨ R√©ponse:", result)

      return {
        success: false,
        error: "Aucun ID d'email retourn√© par Resend",
        details: result,
      }
    }
  } catch (error) {
    console.error("‚ùå Erreur lors de l'envoi de l'email via Resend:", error)

    // Log d√©taill√© de l'erreur
    if (error.response) {
      console.error("üì¨ R√©ponse d'erreur Resend:", error.response.data)
      console.error("üì¨ Status:", error.response.status)
    }

    // Gestion des erreurs sp√©cifiques √† Resend
    if (error.message?.includes("API key")) {
      return {
        success: false,
        error: "Cl√© API Resend invalide ou manquante",
      }
    }

    if (error.message?.includes("rate limit")) {
      return {
        success: false,
        error: "Limite de taux atteinte. Veuillez r√©essayer plus tard.",
      }
    }

    if (error.message?.includes("Invalid")) {
      return {
        success: false,
        error: "Donn√©es d'email invalides",
      }
    }

    return {
      success: false,
      error: error.message || "Erreur inconnue lors de l'envoi de l'email",
      details: error.response?.data || error,
    }
  }
}

// Fonction pour tester la configuration email
const testEmailConfiguration = async () => {
  try {
    console.log("üß™ Test de la configuration Resend...")

    // V√©rifier la cl√© API
    if (!process.env.RESEND_API_KEY) {
      console.error("‚ùå Variable d'environnement RESEND_API_KEY manquante")
      return false
    }

    // V√©rifier le format de la cl√© API
    if (!process.env.RESEND_API_KEY.startsWith("re_")) {
      console.error("‚ùå Format de cl√© API Resend invalide (doit commencer par 're_')")
      return false
    }

    console.log("‚úÖ Configuration Resend valide")
    return true
  } catch (error) {
    console.error("‚ùå Erreur de configuration Resend:", error.message)
    return false
  }
}

// Fonction pour envoyer un email de test
const sendTestEmail = async (email) => {
  try {
    console.log("üß™ Envoi d'un email de test via Resend...")

    const emailData = {
      from: "MyClass <onboarding@resend.dev>",
      to: [email],
      subject: "Test de configuration - MyClass",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <h2 style="color: #007bff;">üéâ Test r√©ussi !</h2>
          <p>F√©licitations ! Votre configuration Resend fonctionne parfaitement.</p>
          <p>Vous pouvez maintenant envoyer des emails de r√©cup√©ration de mot de passe.</p>
          <hr style="margin: 20px 0;">
          <p style="color: #6c757d; font-size: 14px;">
            Cet email de test a √©t√© envoy√© depuis MyClass Platform.
          </p>
        </div>
      `,
      text: "Test r√©ussi ! Votre configuration Resend fonctionne parfaitement.",
    }

    const result = await resend.emails.send(emailData)
    console.log("‚úÖ Email de test envoy√© avec succ√®s:", result.data?.id)
    return { success: true, messageId: result.data?.id }
  } catch (error) {
    console.error("‚ùå Erreur lors de l'envoi de l'email de test:", error)
    return { success: false, error: error.message }
  }
}

module.exports = {
  sendPasswordResetEmail,
  testEmailConfiguration,
  sendTestEmail,
}
